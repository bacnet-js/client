name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint 
        run: npm run lint
      
      - name: Build
        if: matrix.node == '22'
        run: npm run build
  
  test_unit:
    uses: ./.github/workflows/test.yml
    with:
      npm_command: test:unit:coverage
  
  test_integration:
    uses: ./.github/workflows/test.yml
    with:
      npm_command: test:integration:coverage

  test_compliance:
    uses: ./.github/workflows/test.yml
    with:
      docker: true
      npm_command: docker:test

  collect_artifacts:
    needs: [build, test_unit, test_integration] # skip collecting artifacts from compliance for now
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
       
      - uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Merge coverage reports
        run: |
          mkdir -p .nyc_output
          
          mv downloaded-artifacts/*/.nyc_output/* .nyc_output/
          
          # merge all coverage.json files into one
          npx nyc merge .nyc_output coverage/coverage.json

      - name: Coveralls
        uses: coverallsapp/github-action@v2.3.4
        with:
          github-token: ${{ secrets.github_token }}

